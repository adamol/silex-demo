@TODO
    Config & Routing Layer
    Factory & Service Layer
    Request Validation Layer
    Presentation Layer
    Controller Layer
    Database Layer


@TODO
    implement doctrine repositories
        -> go through booking funnel
    replace string identifier with class identifier in pimple
        -> ie not 'books.repository' but rather \Books\Repository::class

    typehint Requests eg Order\Request\CreateOrderRequest, Order\Request\GetOrderRequest
        -> extend ArgumentResolver
        -> validate with symfony/validator annotations
        -> hydrate with zend/hydrator
    return resources and hydrate to json response eg Order\Response\CreateOrderResponse
        -> zend/hydrator or simply ->toArray() method on response objects
        -> possibly thephpleague fractal using models could work well
        -> after middleware

@TODO
    remove cart items!
    update cart items in general

@TODO
    testing fakes
        -> mailer, httpclient, file upload, queue
    auth middleware
        -> https://silex.symfony.com/doc/2.0/middlewares.html
        -> JWT auth
    flysystem
        -> https://flysystem.thephpleague.com/docs/adapter/local/
        -> could later integrate to S3
    nested transactions for testing transactions
        -> https://stackoverflow.com/questions/1490846/mysql-transactions-within-transactions/11941449
    jobs need drivers
        -> first mysql

Customer
    - View books listing
        + Filter by category
    - View book details
    - Add book to cart
    - Create order for cart
        + Order confirmation number
        + Stripe integration            !!!
        + Send email
            - Queue sending email       !!!
    - View order
Admin
    - sign in/up/load (tokens)
    - Create book resource
        + Image upload                  !!!
            - Queue resize              !!!
    - Add inventory
    - Update order status
        + Send email
            - Do NOT Queue              !!!
General
    - exceptions are logged             !!!

# authentication system
#   order history
# recommendations
# newsletter
# feedbacks
# audio and ebook
# frontend client

---------------------------------------

User
- id
- username
- password
- token
- token_timestamp
- created_at
- updated_at

Book
- id
- title
- slug
- price
- description
- image_path
- page_count
- published_date
- isbn
- created_at
- updated_at

BookItem
- id
- book_id
- price
- inventory_code
- reserved_at (nullable)
- order_id (nullable)
- created_at
- updated_at

book_category
- id
- book_id
- category_id
- created_at
- updated_at

Category
- id
- type Enum(thriller, comedy, novel, ...)
- created_at
- updated_at

book_item_order
- id
- book_item_id
- order_id
- created_at
- updated_at

Order
- id
- email
- amount
- card_last_four
- confirmation_number
- created_at
- updated_at

# author_book
# - id
# - book_id
# - author_id
# - created_at
# - updated_at

# Author
# - id
# - name

# book_format
# - id
# - book_id
# - format_id
# - price
# - created_at
# - updated_at

# Format
# - id
# - type Enum(pocket, hardcover, audio, ebook)
# - created_at
# - updated_at
